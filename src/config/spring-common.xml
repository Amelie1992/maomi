<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-4.0.xsd">

	<context:component-scan base-package="com.xed">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- DriverManagerDataSource -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		
		<!-- 开发环境 -->
		<property name="url" value="jdbc:mysql://192.168.1.200:3306/cat_?useUnicode=true&amp;characterEncoding=UTF-8" />
		<property name="username" value="cat_jhh" />
		<property name="password" value="cat_jhh" /> 
		
		<!-- 测试环境 -->
		<!-- 
		<property name="url" value="jdbc:mysql://192.168.0.200:3306/test?useUnicode=true&amp;characterEncoding=UTF-8" />
		<property name="username" value="cat_jhh" />
		<property name="password" value="cat_jhh" />
		 -->
		
		<!-- 打包正式库 -->
       	<!-- <property name="url" value="jdbc:mysql://116.62.236.10:3306/cat_?useUnicode=true&amp;characterEncoding=UTF-8" />
        <property name="username" value="maomicat" />
        <property name="password" value="mm2017cat_XED!JHH" /> -->
        
        
        <!-- 正式库测试 -->
        <!-- <property name="url" value="jdbc:mysql://116.62.236.10:3306/cat_online?useUnicode=true&amp;characterEncoding=UTF-8" />
        <property name="username" value="maomicat" />
        <property name="password" value="mm2017cat_XED!JHH" /> -->
        
        
	</bean>

	<!-- 2. mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource:引用数据源 MyBatis定义数据源,同意加载配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:config/mybatis-config.xml" />
	</bean>

	<!-- 3. mybatis自动扫描加载Sql映射文件/接口 : MapperScannerConfigurer sqlSessionFactory 
		basePackage:指定sql映射文件/接口所在的包（自动扫描） -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.xed.financing.wxgzh.mapper"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>

	<!-- 4. 事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 5. 使用声明式事务 transaction-manager：引用上面定义的事务管理器 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	
	
	<!-- 配置事务传播特性 -->
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice> -->

	<!-- 配置参与事务的类 -->
	<!-- <aop:config expose-proxy="true">
		<aop:pointcut id="txPointcut"
			expression="execution (* com.xed.financing.wxgzh.service.*.*(..))" />
		<aop:advisor pointcut-ref="txPointcut"
			advice-ref="txAdvice" />
	</aop:config>  -->
	
	<!-- 定时任务配置 -->
    <task:annotation-driven/>
	
	<!-- 微信刷新accessToken 需要用到的时候刷新 -->
	<bean id="refurbishAccessToken" class="com.xed.financing.wxgzh.controller.timingProcessing.RefurbishAccessToken" />
	<task:scheduled-tasks>  
	    <task:scheduled ref="refurbishAccessToken" method="refurbish" 
	    initial-delay="1000" fixed-delay="5400000"/>  
	</task:scheduled-tasks>
</beans>
